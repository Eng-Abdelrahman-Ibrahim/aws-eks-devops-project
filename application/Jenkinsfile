pipeline {
    agent any

    environment {
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Pull App Image') {
            steps {
                script {
                    sh 'docker pull abdelrahmandevops/devops-app:distroless'
                }
            }
        }

        stage('Start Services') {
            steps {
                script {
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE} up -d"
                }
            }
        }

        stage('Wait for DB') {
            steps {
                script {
                    // Wait until PostgreSQL is healthy
                    sh '''
                    for i in {1..10}; do
                      if [ "$(docker inspect -f '{{.State.Health.Status}}' mydb)" == "healthy" ]; then
                        echo "Postgres is healthy!"
                        exit 0
                      fi
                      echo "Waiting for Postgres..."
                      sleep 5
                    done
                    exit 1
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh 'pytest Tests/test_api_dashboard.py --maxfail=1 --disable-warnings -q'
                }
            }
        }

        stage('Clean Up') {
            steps {
                script {
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE} down"
                }
            }
        }
    }
}
